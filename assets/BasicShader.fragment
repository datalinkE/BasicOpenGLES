precision mediump float;    // Improves performance

// Constants.
uniform vec3 u_LightPos;    // The position of the light in eye space.
uniform sampler2D u_Texture;

// Input. Interpolated from vertices for each fragment.
varying vec4 v_Color;
varying vec3 v_Normal;
varying vec3 v_Position;
varying vec2 v_TexCoordinate;
varying float v_Distance; // Distance from light source.

void main()
{
    vec3 lightVector = normalize(u_LightPos - v_Position);
    float diffuse = max(dot(v_Normal, lightVector), 0.1);
    diffuse = diffuse * (1.0 / (1.0 + (0.1 * v_Distance * v_Distance)));
    diffuse = diffuse + 0.1;    //some ambient lightning
    gl_FragColor = v_Color * diffuse * texture2D(u_Texture, v_TexCoordinate);
}